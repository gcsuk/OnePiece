@page "/card/{CardId}"
@using OnePiece.Services
@using OnePiece.Models
@inject IAzureStorageService AzureStorageService
@inject NavigationManager Navigation
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Card Details - @(card?.CardNameEnglish ?? "Loading...")</PageTitle>

<div class="container-fluid mt-4">
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3 text-muted">Loading card details...</p>
        </div>
    }
    else if (card == null)
    {
        <div class="text-center py-5">
            <div class="text-muted">
                <i class="bi bi-exclamation-triangle" style="font-size: 4rem;"></i>
                <h3 class="mt-3">Card Not Found</h3>
                <p class="lead">The requested card could not be found in the library.</p>
                <a href="/cards" class="btn btn-primary btn-lg">Back to Library</a>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/cards">üè¥‚Äç‚ò†Ô∏è Library</a></li>
                                <li class="breadcrumb-item active">@card.CardNameEnglish</li>
                            </ol>
                        </nav>
                        <h1>@card.CardNameEnglish</h1>
                        @if (!string.IsNullOrEmpty(card.CardNameJapanese) && card.CardNameJapanese != card.CardNameEnglish)
                        {
                            <p class="text-muted h5">@card.CardNameJapanese</p>
                        }
                    </div>
                    <div class="d-flex gap-2">
                        <a href="/cards" class="btn btn-secondary">
                            ‚Üê Back to Library
                        </a>
                        <a href="/addcard" class="btn btn-success">
                            ‚ûï Add New Card
                        </a>
                        <button class="btn @(isEditMode ? "btn-warning" : "btn-outline-primary")" @onclick="ToggleEditMode">
                            @(isEditMode ? "‚úèÔ∏è Cancel Edit" : "‚úèÔ∏è Edit Card")
                        </button>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        @errorMessage
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="() => errorMessage = null"></button>
                    </div>
                }

                <div class="row">
                    <!-- Card Images Section -->
                    <div class="col-lg-6 mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">üñºÔ∏è Card Images</h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-6">
                                        <div class="text-center">
                                            <h6 class="text-muted mb-2">Japanese (Original)</h6>
                                            <img src="@card.OriginalImageUrl" alt="Japanese Card" 
                                                 class="img-fluid rounded shadow" style="max-height: 300px; width: 100%; object-fit: contain; cursor: pointer;" 
                                                 @onclick='() => ShowImageModal(card!.OriginalImageUrl, "Japanese Card")' />
                                            <div class="mt-2">
                                                <button class="btn btn-sm btn-outline-primary" @onclick='() => ShowImageModal(card!.OriginalImageUrl, "Japanese Card")'>
                                                    <i class="bi bi-zoom-in"></i> View Full Size
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="text-center">
                                            <h6 class="text-muted mb-2">English (Translated)</h6>
                                            <img src="@card.TranslatedImageUrl" alt="English Card" 
                                                 class="img-fluid rounded shadow" style="max-height: 300px; width: 100%; object-fit: contain; cursor: pointer;" 
                                                 @onclick='() => ShowImageModal(card!.TranslatedImageUrl, "English Card")' />
                                            <div class="mt-2">
                                                <button class="btn btn-sm btn-outline-primary" @onclick='() => ShowImageModal(card!.TranslatedImageUrl, "English Card")'>
                                                    <i class="bi bi-zoom-in"></i> View Full Size
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Card Information Section -->
                    <div class="col-lg-6 mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">üìã Card Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Card Type</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.CardType" placeholder="Enter card type" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                <span class="badge bg-secondary fs-6">@card!.CardType</span>
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Color</label>
                                        @if (isEditMode)
                                        {
                                            <select class="form-select" @bind="editableCard!.Color">
                                                <option value="">Select Color</option>
                                                <option value="Red">Red</option>
                                                <option value="Blue">Blue</option>
                                                <option value="Green">Green</option>
                                                <option value="Purple">Purple</option>
                                                <option value="Black">Black</option>
                                                <option value="Yellow">Yellow</option>
                                            </select>
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                <span class="badge bg-@GetColorClass(card!.Color) fs-6">@card.Color</span>
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Cost</label>
                                        @if (isEditMode)
                                        {
                                            <input type="number" class="form-control" @bind="editableCard!.Cost" placeholder="Enter cost" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (card!.Cost.HasValue)
                                                {
                                                    <span class="badge bg-info fs-6">@card!.Cost</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Power</label>
                                        @if (isEditMode)
                                        {
                                            <input type="number" class="form-control" @bind="editableCard!.Power" placeholder="Enter power" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (card!.Power.HasValue)
                                                {
                                                    <span class="badge bg-success fs-6">@card!.Power</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Rarity</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.Rarity" placeholder="Enter rarity" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (!string.IsNullOrEmpty(card!.Rarity))
                                                {
                                                    <span class="badge bg-warning fs-6">@card!.Rarity</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Card Name (Japanese)</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.CardNameJapanese" placeholder="Enter Japanese name" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (!string.IsNullOrEmpty(card!.CardNameJapanese))
                                                {
                                                    <span>@card!.CardNameJapanese</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Collection Information -->
                    <div class="col-lg-6 mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">üè∑Ô∏è Collection Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Set Code</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.SetCode" placeholder="Enter set code" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (!string.IsNullOrEmpty(card!.SetCode))
                                                {
                                                    <code>@card!.SetCode</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Collector Number</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.CollectorNumber" placeholder="Enter collector number" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (!string.IsNullOrEmpty(card!.CollectorNumber))
                                                {
                                                    <code>@card!.CollectorNumber</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Primary Card Name</label>
                                        @if (isEditMode)
                                        {
                                            <input type="text" class="form-control" @bind="editableCard!.CardName" placeholder="Enter primary card name" />
                                        }
                                        else
                                        {
                                            <div class="p-2 bg-light rounded">
                                                @if (!string.IsNullOrEmpty(card!.CardName))
                                                {
                                                    <span>@card!.CardName</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Added to Library</label>
                                        <div class="p-2 bg-light rounded">
                                            <span>@card.AnalysisDate.ToString("MMMM dd, yyyy 'at' HH:mm")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Analysis Information -->
                    <div class="col-lg-6 mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">üî¨ Analysis Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Analysis Method</label>
                                        <div class="p-2 bg-light rounded">
                                            @if (!string.IsNullOrEmpty(card.AnalysisMethod))
                                            {
                                                <span>@card.AnalysisMethod</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not specified</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Confidence Score</label>
                                        <div class="p-2 bg-light rounded">
                                            @if (card.Confidence.HasValue)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <span class="me-2">@(card.Confidence.Value.ToString("P0"))</span>
                                                    <div class="progress flex-grow-1" style="height: 8px;">
                                                        <div class="progress-bar @GetConfidenceColor(card.Confidence.Value)" 
                                                             style="width: @(card.Confidence.Value * 100)%"></div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not available</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Storage Account</label>
                                        <div class="p-2 bg-light rounded">
                                            <code class="small">@card.StorageAccount</code>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Container</label>
                                        <div class="p-2 bg-light rounded">
                                            <code class="small">@card.ContainerName</code>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Technical Details -->
                <div class="row">
                    <div class="col-12 mb-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">‚öôÔ∏è Technical Details</h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Card ID</label>
                                        <div class="p-2 bg-light rounded">
                                            <code class="small">@card.RowKey</code>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Partition Key</label>
                                        <div class="p-2 bg-light rounded">
                                            <code class="small">@card.PartitionKey</code>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">Last Modified</label>
                                        <div class="p-2 bg-light rounded">
                                            <span>@(card.Timestamp?.ToString("MMMM dd, yyyy 'at' HH:mm:ss") ?? "Unknown")</span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">ETag</label>
                                        <div class="p-2 bg-light rounded">
                                            <code class="small">@card.ETag</code>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="row">
                    <div class="col-12 mb-4">
                        @if (isEditMode)
                        {
                            <div class="d-flex gap-2 justify-content-center">
                                <button class="btn btn-success btn-lg" @onclick="SaveChanges" disabled="@isSaving">
                                    @if (isSaving)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                        <span>Saving...</span>
                                    }
                                    else
                                    {
                                        <span>üíæ Save Changes</span>
                                    }
                                </button>
                                <button class="btn btn-secondary btn-lg" @onclick="CancelEdit" disabled="@isSaving">
                                    ‚ùå Cancel
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex gap-2 justify-content-center">
                                <a href="/cards" class="btn btn-secondary btn-lg">
                                    ‚Üê Back to Library
                                </a>
                                <a href="/addcard" class="btn btn-success btn-lg">
                                    ‚ûï Add New Card
                                </a>
                                @if (!string.IsNullOrEmpty(card!.OriginalImageUrl))
                                {
                                    <button class="btn btn-outline-primary btn-lg" @onclick='() => ShowImageModal(card.OriginalImageUrl, "Japanese Card")'>
                                        üñºÔ∏è View Japanese Image
                                    </button>
                                }
                                @if (!string.IsNullOrEmpty(card!.TranslatedImageUrl))
                                {
                                    <button class="btn btn-outline-primary btn-lg" @onclick='() => ShowImageModal(card.TranslatedImageUrl, "English Card")'>
                                        üñºÔ∏è View English Image
                                    </button>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Card Image Modal -->
@if (showModal && !string.IsNullOrEmpty(modalImageUrl))
{
    <div class="card-modal-overlay" 
         @onkeydown="HandleKeyDown"
         @onclick="CloseCardModal">
        <div class="card-modal-container" @onclick:stopPropagation="true">
            <button type="button" class="card-modal-close" 
                    @onclick="CloseCardModal" 
                    aria-label="Close">
                √ó
            </button>
            <img src="@modalImageUrl" 
                 alt="@modalImageAlt" 
                 class="card-modal-image" />
        </div>
    </div>
}

@code {
    [Parameter]
    public string CardId { get; set; } = string.Empty;

    private CardMetadata? card;
    private CardMetadata? editableCard;
    private bool isLoading = true;
    private bool isEditMode = false;
    private bool isSaving = false;
    private string? errorMessage;
    private bool showModal = false;
    private string? modalImageUrl;
    private string? modalImageAlt;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CardId))
        {
            Navigation.NavigateTo("/");
            return;
        }

        await LoadCardDetailsAsync();
    }

    private async Task LoadCardDetailsAsync()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            
            card = await AzureStorageService.GetCardMetadataAsync(CardId);
            
            if (card == null)
            {
                // Card not found, stay on loading state and show error message
            }
        }
        catch (Exception ex)
        {
            // Handle error - you might want to show a user-friendly error message
            Console.WriteLine($"Error loading card details: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ToggleEditMode()
    {
        if (isEditMode)
        {
            // Cancel edit mode
            isEditMode = false;
            editableCard = null;
            errorMessage = null;
        }
        else
        {
            // Enter edit mode
            if (card != null)
            {
                // Create a copy of the card for editing
                editableCard = new CardMetadata
                {
                    PartitionKey = card.PartitionKey,
                    RowKey = card.RowKey,
                    Timestamp = card.Timestamp,
                    ETag = card.ETag,
                    CardName = card.CardName,
                    CardNameJapanese = card.CardNameJapanese,
                    CardNameEnglish = card.CardNameEnglish,
                    OriginalImageUrl = card.OriginalImageUrl,
                    TranslatedImageUrl = card.TranslatedImageUrl,
                    CardType = card.CardType,
                    Color = card.Color,
                    Cost = card.Cost,
                    Power = card.Power,
                    Rarity = card.Rarity,
                    SetCode = card.SetCode,
                    CollectorNumber = card.CollectorNumber,
                    AnalysisDate = card.AnalysisDate,
                    AnalysisMethod = card.AnalysisMethod,
                    Confidence = card.Confidence,
                    StorageAccount = card.StorageAccount,
                    ContainerName = card.ContainerName
                };
                isEditMode = true;
                errorMessage = null;
            }
        }
    }

    private async Task SaveChanges()
    {
        if (editableCard == null) return;

        try
        {
            isSaving = true;
            errorMessage = null;
            StateHasChanged();

            // Update the card with the edited values
            var updatedCard = await AzureStorageService.UpdateCardMetadataAsync(editableCard);
            
            // Update the main card reference
            card = updatedCard;
            
            // Exit edit mode
            isEditMode = false;
            editableCard = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to save changes: {ex.Message}";
            Console.WriteLine($"Error saving card changes: {ex.Message}");
        }
        finally
        {
            isSaving = false;
            StateHasChanged();
        }
    }

    private void CancelEdit()
    {
        isEditMode = false;
        editableCard = null;
        errorMessage = null;
    }

    private string GetColorClass(string color)
    {
        return color?.ToLowerInvariant() switch
        {
            "red" => "danger",
            "blue" => "primary",
            "green" => "success",
            "purple" => "purple",
            "black" => "dark",
            "yellow" => "warning",
            _ => "secondary"
        };
    }

    private string GetConfidenceColor(double confidence)
    {
        return confidence switch
        {
            >= 0.8 => "success",
            >= 0.6 => "warning",
            >= 0.4 => "info",
            _ => "danger"
        };
    }

    private void ShowImageModal(string imageUrl, string altText)
    {
        modalImageUrl = imageUrl;
        modalImageAlt = altText;
        showModal = true;
        StateHasChanged();
    }

    private void CloseCardModal()
    {
        showModal = false;
        modalImageUrl = null;
        modalImageAlt = null;
        StateHasChanged();
    }

    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
        {
            CloseCardModal();
        }
    }
}
